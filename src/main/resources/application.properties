spring.application.name= CodeBase

server.port=9000


spring.datasource.druid.write.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.druid.write.url = jdbc:mysql://10.30.1.143:3306/site?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.datasource.druid.write.username = root
spring.datasource.druid.write.password = xinshanger
spring.datasource.druid.write.initialSize = 20
spring.datasource.druid.write.minIdle = 20
spring.datasource.druid.write.maxActive = 100
spring.datasource.druid.write.maxWait = 60000
spring.datasource.druid.write.timeBetweenEvictionRunsMillis = 60000
spring.datasource.druid.write.minEvictableIdleTimeMillis = 300000
spring.datasource.druid.write.validationQuery = SELECT 1 FROM DUAL
spring.datasource.druid.write.testWhileIdle = true
spring.datasource.druid.write.testOnBorrow = false
spring.datasource.druid.write.testOnReturn = false
spring.datasource.druid.write.poolPreparedStatements = true
spring.datasource.druid.write.maxPoolPreparedStatementPerConnectionSize = 20
spring.datasource.druid.write.filters = stat,wall,slf4j
spring.datasource.druid.write.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


spring.mybatis.read.typeAliasesPackage= com.inglc.codebase.repository.entity
spring.mybatis.read.mapperLocations= classpath:com/inglc/codebase/repository/read/*Mapper.xml


spring.datasource.druid.read.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.druid.read.url = jdbc:mysql://192.168.1.200:3306/site?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.datasource.druid.read.username = root
spring.datasource.druid.read.password = xinshanger
spring.datasource.druid.read.initialSize = 20
spring.datasource.druid.read.minIdle = 20
spring.datasource.druid.read.maxActive = 100
spring.datasource.druid.read.maxWait = 60000
spring.datasource.druid.read.timeBetweenEvictionRunsMillis = 60000
spring.datasource.druid.read.minEvictableIdleTimeMillis = 300000
spring.datasource.druid.read.validationQuery = SELECT 1 FROM DUAL
spring.datasource.druid.read.testWhileIdle = true
spring.datasource.druid.read.testOnBorrow = false
spring.datasource.druid.read.testOnReturn = false
spring.datasource.druid.read.poolPreparedStatements = true
spring.datasource.druid.read.maxPoolPreparedStatementPerConnectionSize = 20
spring.datasource.druid.read.filters = stat,wall,slf4j
spring.datasource.druid.read.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


spring.mybatis.write.typeAliasesPackage= com.inglc.codebase.repository.entity
spring.mybatis.write.mapperLocations= classpath:com/inglc/codebase/repository/write/*Mapper.xml

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled = true
spring.datasource.druid.web-stat-filter.exclusions = *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
##是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled = true
spring.datasource.druid.stat-view-servlet.url-pattern = /druid/*
spring.datasource.druid.stat-view-servlet.reset-enable = false
spring.datasource.druid.stat-view-servlet.login-username = admin
spring.datasource.druid.stat-view-servlet.login-password = 123456


async.thread.corePoolSize=0
async.thread.maxPoolSize=1000
async.thread.queueCapacity=0


spring.redis.host = 127.0.0.1
spring.redis.database = 6
spring.redis.password = test
spring.redis.port = 6379
spring.redis.timeout= 2000ms
spring.redis.maxActive = 600
spring.redis.maxIdle= 1000
spring.redis.minIdle= 500

spring.rabbitmq.host = 127.0.0.1
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest
spring.rabbitmq.virtual-host = /rabbitGo



##RabbitMQ host.
#spring.rabbitmq.host=localhost
##Login user to authenticate to the broker.
#spring.rabbitmq.username=guest
##Login to authenticate against the broker.
#spring.rabbitmq.password=guest
##RabbitMQ port.
#spring.rabbitmq.port=5672
##Virtual host to use when connecting to the broker.
#spring.rabbitmq.virtual-host=/
##Whether to create an AmqpAdmin bean.
#spring.rabbitmq.dynamic=true
##Comma-separated list of addresses to which the client should connect.
#spring.rabbitmq.addresses
##Duration to wait to obtain a channel if the cache size has been reached. If 0, always create a new channel.
#spring.rabbitmq.cache.channel.checkout-timeout
#
##Number of channels to retain in the cache. When "check-timeout" > 0, max channels per connection.
#spring.rabbitmq.cache.channel.size
#
#spring.rabbitmq.cache.connection.mode=channel
#
##Number of connections to cache. Only applies when mode is CONNECTION.
#spring.rabbitmq.cache.connection.size
##Connection timeout. Set it to zero to wait forever.
#spring.rabbitmq.connection-timeout
#
#
##Acknowledge mode of container.
#spring.rabbitmq.listener.direct.acknowledge-mode
#
##Whether to start the container automatically on startup.
#spring.rabbitmq.listener.direct.auto-startup=true
##Number of consumers per queue.
#spring.rabbitmq.listener.direct.consumers-per-queue
#
##Whether rejected deliveries are re-queued by default.
#spring.rabbitmq.listener.direct.default-requeue-rejected
#
##How often idle container events should be published.
#spring.rabbitmq.listener.direct.idle-event-interval
##Whether to fail if the queues declared by the container are not available on the broker.
#spring.rabbitmq.listener.direct.missing-queues-fatal=false
#
##Maximum number of unacknowledged messages that can be outstanding at each consumer.
#spring.rabbitmq.listener.direct.prefetch
##Whether publishing retries are enabled.
#spring.rabbitmq.listener.direct.retry.enabled=false
#
##Duration between the first and second attempt to deliver a message.
#spring.rabbitmq.listener.direct.retry.initial-interval=1000ms
#
#
##Maximum number of attempts to deliver a message.
#spring.rabbitmq.listener.direct.retry.max-attempts=3
##Maximum duration between attempts.
#spring.rabbitmq.listener.direct.retry.max-interval=10000ms
##Multiplier to apply to the previous retry interval.
#spring.rabbitmq.listener.direct.retry.multiplier=1
##Whether retries are stateless or stateful.
#spring.rabbitmq.listener.direct.retry.stateless=true
##Acknowledge mode of container.
#spring.rabbitmq.listener.simple.acknowledge-mode
##Whether to start the container automatically on startup.
#spring.rabbitmq.listener.simple.auto-startup=true
#
##Batch size, expressed as the number of physical messages, to be used by the container.
#spring.rabbitmq.listener.simple.batch-size
#
#
##Minimum number of listener invoker threads.
#spring.rabbitmq.listener.simple.concurrency
##Whether rejected deliveries are re-queued by default.
#spring.rabbitmq.listener.simple.default-requeue-rejected
##How often idle container events should be published.
#spring.rabbitmq.listener.simple.idle-event-interval
#
##Maximum number of listener invoker threads.
#spring.rabbitmq.listener.simple.max-concurrency
##Whether to fail if the queues declared by the container are not available on the broker and/or whether to stop the container if one or more queues are deleted at runtime.
#spring.rabbitmq.listener.simple.missing-queues-fatal=true
#
##Maximum number of unacknowledged messages that can be outstanding at each consumer.
#spring.rabbitmq.listener.simple.prefetch
##Whether publishing retries are enabled.
#spring.rabbitmq.listener.simple.retry.enabled=false
##Duration between the first and second attempt to deliver a message.
#spring.rabbitmq.listener.simple.retry.initial-interval=1000ms
#
##Maximum number of attempts to deliver a message.
#spring.rabbitmq.listener.simple.retry.max-attempts=3
#
##Maximum duration between attempts.
#spring.rabbitmq.listener.simple.retry.max-interval=10000ms
##Multiplier to apply to the previous retry interval.
#spring.rabbitmq.listener.simple.retry.multiplier=1
#
##Whether retries are stateless or stateful.
#spring.rabbitmq.listener.simple.retry.stateless=true
#
#spring.rabbitmq.listener.type=simple
#
##Type of publisher confirms to use.
#spring.rabbitmq.publisher-confirm-type
#
##Whether to enable publisher returns.
#spring.rabbitmq.publisher-returns=false
#
##Requested heartbeat timeout; zero for none. If a duration suffix is not specified, seconds will be used.
#spring.rabbitmq.requested-heartbeat
#
##SSL algorithm to use. By default, configured by the Rabbit client library.
#spring.rabbitmq.ssl.algorithm
##Whether to enable SSL support.
#spring.rabbitmq.ssl.enabled=false
##Path to the key store that holds the SSL certificate.
#spring.rabbitmq.ssl.key-store
##Password used to access the key store.
#spring.rabbitmq.ssl.key-store-password
#
##Key store type.
#spring.rabbitmq.ssl.key-store-type = PKCS12
##Trust store that holds SSL certificates.
#spring.rabbitmq.ssl.trust-store
#
##Password used to access the trust store.
#spring.rabbitmq.ssl.trust-store-password
##Trust store type.
#spring.rabbitmq.ssl.trust-store-type=JKS
##Whether to enable server side certificate validation.
#spring.rabbitmq.ssl.validate-server-certificate=true
##Whether to enable hostname verification.
#spring.rabbitmq.ssl.verify-hostname=true
##Name of the default queue to receive messages from when none is specified explicitly.
#spring.rabbitmq.template.default-receive-queue
#
##Name of the default exchange to use for send operations.
#spring.rabbitmq.template.exchange
##Whether to enable mandatory messages.
#spring.rabbitmq.template.mandatory
##Timeout for `receive()` operations.
#spring.rabbitmq.template.receive-timeout
##Timeout for `sendAndReceive()` operations.
#spring.rabbitmq.template.reply-timeout
##Whether publishing retries are enabled.
#spring.rabbitmq.template.retry.enabled=false
#
##Duration between the first and second attempt to deliver a message.
#spring.rabbitmq.template.retry.initial-interval=1000ms
#
##Maximum number of attempts to deliver a message.
#spring.rabbitmq.template.retry.max-attempts=3
#
##Maximum duration between attempts.
#spring.rabbitmq.template.retry.max-interval=10000ms
#
##Multiplier to apply to the previous retry interval.
#spring.rabbitmq.template.retry.multiplier=1
#
##Value of a default routing key to use for send operations.
#spring.rabbitmq.template.routing-key
